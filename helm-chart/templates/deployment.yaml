apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "flask-cicd.fullname" . }}
  labels:
    {{- include "flask-cicd.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "flask-cicd.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "flask-cicd.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name: flask-app
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 5000
          name: http
        env:
        - name: ENVIRONMENT
          value: "{{ .Values.environment }}"
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
